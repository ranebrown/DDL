 	.syntax unified
 	.cpu cortex-m0
 	.align	2
 	.global	asm_fib
 	.thumb
 	.thumb_func

asm_fib:
	push {r4, r5, lr} 	// push to stack
	mov r4, r0 			// store value of n in r4
	cmp r4, r0
	ble L3	// if (r0 <= 0) goto .L3
	cmp r4, #1 // Compare r4 to 1
	beq L4 // if (r4 == 1) goto .L4
	adds r0, r4, #4294967295 //r0 = r4 + 4294967295 (or #0xFFFFFFFF)

	bl asm_fib // goto fibonacci @PC relative address
	mov r5, r0
	subs r0, r4, #2
	bl asm_fib
	adds r0, r5, r0
	pop {r4, r5, pc}
L3:
	movs r0, #0
	pop {r4, r5, pc}
L4:
	movs r0, #1
	pop {r4, r5, pc}

